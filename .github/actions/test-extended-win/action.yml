name: Test extended MF6 (Windows)
description: Build and test extended MODFLOW 6 on Windows
runs:
  using: "composite"
  steps:

    - name: Build MF6 parallel
      uses: ./modflow6/.github/actions/build-extended-win

    - name: Update flopy
      working-directory: modflow6
      shell: cmd
      run: pixi run update-flopy

    - name: Get executables
      working-directory: modflow6/autotest
      shell: cmd
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: pixi run get-exes

    - name: Convert unix2dos
      shell: cmd
      run: |
        unix2dos -n "%GITHUB_WORKSPACE%\modflow6\.github\common\test_modflow6_parallel.bat" "%TEMP%\test_modflow6_parallel.bat"
        unix2dos -n "%GITHUB_WORKSPACE%\modflow6\.github\common\test_modflow6_serial.bat" "%TEMP%\test_modflow6_serial.bat"
        unix2dos -n "%GITHUB_WORKSPACE%\modflow6\.github\common\test_modflow6_netcdf.bat" "%TEMP%\test_modflow6_netcdf.bat"

    - name: Test programs (parallel)
      if: github.ref_name != 'master'
      shell: cmd
      env:
        REPOS_PATH: ${{ github.workspace }}
      run: |
        "%ONEAPI_ROOT%\setvars.bat" intel64 vs2022 && "%TEMP%\test_modflow6_parallel.bat"

    - name: Test programs (parallel)
      if: github.ref_name == 'master'
      shell: cmd
      env:
        REPOS_PATH: ${{ github.workspace }}
        MARKERS: not developmode
      run: |
        "%ONEAPI_ROOT%\setvars.bat" intel64 vs2022 && "%TEMP%\test_modflow6_parallel.bat"

    - name: Test programs (netcdf)
      if: github.ref_name != 'master'
      shell: cmd
      env:
        REPOS_PATH: ${{ github.workspace }}
      run: |
        "%ONEAPI_ROOT%\setvars.bat" intel64 vs2022 && "%TEMP%\test_modflow6_netcdf.bat"

    - name: Test programs (netcdf)
      if: github.ref_name == 'master'
      shell: cmd
      env:
        REPOS_PATH: ${{ github.workspace }}
        MARKERS: not developmode
      run: |
        "%ONEAPI_ROOT%\setvars.bat" intel64 vs2022 && "%TEMP%\test_modflow6_netcdf.bat"

    - name: Test programs (serial)
      if: github.ref_name != 'master'
      shell: cmd
      env:
        REPOS_PATH: ${{ github.workspace }}
      run: |
        "%ONEAPI_ROOT%\setvars.bat" intel64 vs2022 && "%TEMP%\test_modflow6_serial.bat"

    - name: Test programs (serial)
      if: github.ref_name == 'master'
      shell: cmd
      env:
        REPOS_PATH: ${{ github.workspace }}
        MARKERS: not developmode
      run: |
        "%ONEAPI_ROOT%\setvars.bat" intel64 vs2022 && "%TEMP%\test_modflow6_serial.bat"

    - name: Copy deps to bin dir
      working-directory: modflow6/bin
      shell: cmd
      run: |
        :: copy dependencies
        copy "C:\Windows\System32\ucrtbase.dll" .
        copy "C:\Windows\System32\msvcrt.dll" .
        copy "C:\Windows\System32\msvcp_win.dll" .
        copy "C:\Windows\SYSTEM32\MSVCP140.dll" .
        copy "C:\Windows\SYSTEM32\VCRUNTIME140.dll" .
        copy "C:\Windows\SYSTEM32\VCRUNTIME140_1.dll" .
        copy "C:\Program Files (x86)\Intel\oneAPI\compiler\latest\bin\libifcoremd.dll" .
        copy "C:\Program Files (x86)\Intel\oneAPI\compiler\latest\bin\libmmd.dll" .
        copy "C:\Program Files (x86)\Intel\oneAPI\mkl\latest\bin\mkl_sequential.2.dll" .
        copy "C:\Program Files (x86)\Intel\oneAPI\mkl\latest\bin\mkl_core.2.dll" .
        copy "C:\Program Files (x86)\Intel\oneAPI\mkl\latest\bin\mkl_def.2.dll" .
        copy "C:\Program Files (x86)\Intel\oneAPI\mkl\latest\bin\mkl_avx2.2.dll" .
        copy "C:\Program Files (x86)\Intel\oneAPI\mkl\latest\bin\mkl_avx512.2.dll" .
        copy "C:\Program Files (x86)\Intel\oneAPI\mkl\latest\bin\mkl_mc3.2.dll" .
        copy "C:\Program Files (x86)\Intel\oneAPI\mpi\latest\bin\impi.dll" .
        copy "C:\Program Files (x86)\Intel\oneAPI\mpi\latest\opt\mpi\libfabric\bin\libfabric.dll" .
        copy "C:\Program Files (x86)\Intel\oneAPI\mpi\latest\bin\mpiexec.exe" .
        copy "C:\Program Files (x86)\Intel\oneAPI\mpi\latest\bin\hydra_bstrap_proxy.exe" .
        copy "C:\Program Files (x86)\Intel\oneAPI\mpi\latest\bin\hydra_pmi_proxy.exe" .
        copy "C:\Program Files (x86)\Intel\oneAPI\mpi\latest\bin\hydra_service.exe" .
        copy "%GITHUB_WORKSPACE%\petsc\arch-mswin-c-opt\lib\libpetsc.dll" .

    - name: Upload binaries
      uses: actions/upload-artifact@v3
      with:
        name: bin-ext
        path: modflow6/bin
